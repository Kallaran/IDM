/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Print
import org.xtext.example.mydsl.myDsl.Command

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		fsa.generateFile('file.py',
			'''
			#generated python file
			«FOR c : resource.allContents.toIterable.filter(Command)»
				«c.compile»
			«ENDFOR»
			
			''' 
   		)
   	}
   	
   	private def compile(Command c) '''
		«IF c.eClass().name === "Print"»
			print("«c.name»")
		«ENDIF»
		
    '''
   	
   	
}
